import warnings
warnings.filterwarnings("ignore")

!pip install openai  # ==0.28
!pip install gradio
!pip install langchain langchain_community

from google.colab import userdata
import openai
import os

os.environ["OPENAI_API_KEY"] = userdata.get('OPENAI_API_KEY')
openai.api_key  = os.environ["OPENAI_API_KEY"]

from langchain.chat_models import ChatOpenAI
from langchain.schema import AIMessage, HumanMessage
import openai
import gradio as gr


# llm = ChatOpenAI(temperature=1.0, model='ft:gpt-3.5-turbo-0613:shinkisa::8VomhV43')
llm = ChatOpenAI(temperature=1.0, model='gpt-4.1-2025-04-14')


def predict(message, history):
    history_langchain_format = []
    for human, ai in history:
        history_langchain_format.append(HumanMessage(content=human))
        history_langchain_format.append(AIMessage(content=ai))
    history_langchain_format.append(HumanMessage(content=message))
    gpt_response = llm(history_langchain_format)
    return gpt_response.content


gr.ChatInterface(predict).launch()
